{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\nexport default {\n  name: 'QuizComponent',\n  setup() {\n    const questions = [{\n      id: 1,\n      text: \"Ai experiență în dezvoltare web?\",\n      feedbackYes: \"Excelent! Experiența ta în dezvoltare web este un atu important.\",\n      feedbackNo: \"Nu-ți face griji! Toți începem de undeva. Îți recomandăm să începi cu bazele.\"\n    }, {\n      id: 2,\n      text: \"Ai lucrat înainte cu Vue.js?\",\n      feedbackYes: \"Perfect! Cunoștințele tale de Vue.js vor fi foarte utile.\",\n      feedbackNo: \"Vue.js este un framework excelent pentru început. Începe cu documentația oficială.\"\n    }, {\n      id: 3,\n      text: \"Ai experiență cu sisteme de versionare (Git)?\",\n      feedbackYes: \"Foarte bine! Git este esențial în dezvoltarea modernă.\",\n      feedbackNo: \"Git este un instrument fundamental. Începe cu tutorialele de bază.\"\n    }];\n    const currentQuestionIndex = ref(0);\n    const answers = ref({});\n    const userEmail = ref('');\n    const emailError = ref(false);\n    const currentQuestion = computed(() => questions[currentQuestionIndex.value]);\n    const isCompleted = computed(() => currentQuestionIndex.value >= questions.length);\n    const isValidEmail = computed(() => {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(userEmail.value);\n    });\n    const generatePDF = () => {\n      const doc = new jsPDF({\n        unit: 'mm',\n        format: 'a4',\n        putOnlyUsedFonts: true,\n        margins: {\n          top: 20,\n          bottom: 20,\n          left: 20,\n          right: 20\n        }\n      });\n\n      // Adăugăm font-ul cu suport pentru diacritice\n      doc.setFont(\"helvetica\", \"normal\");\n      doc.setLanguage(\"ro\");\n\n      // Header\n      doc.setFontSize(24);\n      doc.setTextColor(44, 62, 80);\n      doc.text('Raport de Evaluare', 105, 20, {\n        align: 'center'\n      });\n\n      // Data\n      doc.setFontSize(12);\n      doc.setTextColor(128, 128, 128);\n      const date = new Date().toLocaleDateString('ro-RO', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      });\n      doc.text(`Generat la: ${date}`, 20, 30);\n      let yPos = 50;\n\n      // Procesare întrebări și răspunsuri\n      questions.forEach((question, index) => {\n        const answer = answers.value[question.id];\n\n        // Verifică spațiul disponibil\n        if (yPos > 250) {\n          doc.addPage();\n          yPos = 20;\n        }\n\n        // Întrebarea\n        doc.setFontSize(14);\n        doc.setTextColor(44, 62, 80);\n        const questionText = `${index + 1}. ${question.text}`;\n        doc.text(questionText, 20, yPos);\n        yPos += 10;\n\n        // Răspuns\n        doc.setFontSize(12);\n        doc.setTextColor(52, 152, 219);\n        const answerText = `Răspuns: ${answer ? 'Da' : 'Nu'}`;\n        doc.text(answerText, 20, yPos);\n        yPos += 8;\n\n        // Feedback\n        doc.setTextColor(70, 70, 70);\n        const feedback = answer ? question.feedbackYes : question.feedbackNo;\n\n        // Împărțirea textului în linii cu respectarea limitelor paginii\n        const splitFeedback = doc.splitTextToSize(feedback, 170);\n        splitFeedback.forEach(line => {\n          // Verifică din nou spațiul disponibil pentru fiecare linie\n          if (yPos > 270) {\n            doc.addPage();\n            yPos = 20;\n          }\n          doc.text(line, 20, yPos);\n          yPos += 7;\n        });\n        yPos += 15; // spațiu între întrebări\n      });\n\n      // Footer\n      doc.setFontSize(10);\n      doc.setTextColor(128, 128, 128);\n      doc.text('Document generat automat', 105, 285, {\n        align: 'center'\n      });\n      return doc.output('blob');\n    };\n    const answerQuestion = answer => {\n      answers.value[currentQuestion.value.id] = answer;\n      currentQuestionIndex.value++;\n    };\n    const submitResults = async () => {\n      if (!isValidEmail.value) {\n        emailError.value = true;\n        return;\n      }\n      try {\n        const pdfBlob = generatePDF();\n        const formData = new FormData();\n        formData.append('pdf', pdfBlob, 'rezultate.pdf');\n        formData.append('email', userEmail.value);\n        await axios.post('http://localhost:3000/send-results', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert('Rezultatele au fost trimise pe email!');\n      } catch (error) {\n        console.error('Error:', error);\n        alert('A apărut o eroare. Te rugăm să încerci din nou.');\n      }\n    };\n    return {\n      questions,\n      currentQuestion,\n      currentQuestionIndex,\n      isCompleted,\n      userEmail,\n      emailError,\n      isValidEmail,\n      answerQuestion,\n      submitResults\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","jsPDF","axios","name","setup","questions","id","text","feedbackYes","feedbackNo","currentQuestionIndex","answers","userEmail","emailError","currentQuestion","value","isCompleted","length","isValidEmail","emailRegex","test","generatePDF","doc","unit","format","putOnlyUsedFonts","margins","top","bottom","left","right","setFont","setLanguage","setFontSize","setTextColor","align","date","Date","toLocaleDateString","year","month","day","yPos","forEach","question","index","answer","addPage","questionText","answerText","feedback","splitFeedback","splitTextToSize","line","output","answerQuestion","submitResults","pdfBlob","formData","FormData","append","post","headers","alert","error","console"],"sources":["D:\\Projects\\Barmayoun\\vue-questions\\quizz-app-v2\\src\\components\\QuizComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-2xl mx-auto\">\r\n    <div v-if=\"!isCompleted\" class=\"bg-white/70 backdrop-blur-lg rounded-2xl p-8 shadow-lg border border-gray-100\">\r\n      <div class=\"space-y-6\">\r\n        <div class=\"flex items-center justify-between mb-6\">\r\n          <span class=\"text-sm font-medium text-gray-500\">\r\n            Progres\r\n          </span>\r\n          <span class=\"text-sm font-medium text-gray-500\">\r\n            {{ currentQuestionIndex + 1 }}/{{ questions.length }}\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"w-full bg-gray-200 rounded-full h-2 mb-8\">\r\n          <div class=\"bg-primary rounded-full h-2 transition-all duration-300\"\r\n            :style=\"{ width: `${(currentQuestionIndex / questions.length) * 100}%` }\"></div>\r\n        </div>\r\n\r\n        <h2 class=\"text-2xl font-medium text-gray-800 mb-8\">\r\n          {{ currentQuestion.text }}\r\n        </h2>\r\n\r\n        <div class=\"flex gap-4 justify-center\">\r\n          <button @click=\"answerQuestion(true)\"\r\n            class=\"flex-1 py-3 px-6 bg-primary hover:bg-primary/90 text-gray-800 rounded-xl shadow-md hover:shadow-lg transition-all duration-200\">\r\n            Da\r\n          </button>\r\n          <button @click=\"answerQuestion(false)\"\r\n            class=\"flex-1 py-3 px-6 bg-white hover:bg-gray-50 text-gray-800 border border-gray-200 rounded-xl shadow-sm hover:shadow-md transition-all duration-200\">\r\n            Nu\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else class=\"bg-white/70 backdrop-blur-lg rounded-2xl p-8 shadow-lg border border-gray-100\">\r\n      <div class=\"text-center space-y-6\">\r\n        <div class=\"mb-8\">\r\n          <div class=\"inline-flex items-center justify-center w-16 h-16 bg-primary/20 rounded-full mb-4\">\r\n            <svg class=\"w-8 h-8 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n            </svg>\r\n          </div>\r\n          <h2 class=\"text-2xl font-semibold text-gray-800 mb-2\">\r\n            Felicitări! Ai finalizat evaluarea\r\n          </h2>\r\n          <p class=\"text-gray-600\">\r\n            Introdu adresa ta de email pentru a primi raportul personalizat.\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"max-w-md mx-auto\">\r\n          <input type=\"email\" v-model=\"userEmail\" placeholder=\"email@example.com\"\r\n            class=\"w-full px-4 py-3 rounded-xl border border-gray-200 mb-4 focus:ring-2 focus:ring-primary/50 focus:border-primary outline-none\"\r\n            :class=\"{ 'border-red-300': emailError }\">\r\n          <button @click=\"submitResults\"\r\n            class=\"w-full py-3 px-6 bg-primary hover:bg-primary/90 text-gray-800 rounded-xl shadow-md hover:shadow-lg transition-all duration-200 disabled:opacity-50\"\r\n            :disabled=\"!isValidEmail\">\r\n            Trimite Rezultatele\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed } from 'vue'\r\nimport { jsPDF } from 'jspdf'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'QuizComponent',\r\n  setup() {\r\n    const questions = [\r\n      {\r\n        id: 1,\r\n        text: \"Ai experiență în dezvoltare web?\",\r\n        feedbackYes: \"Excelent! Experiența ta în dezvoltare web este un atu important.\",\r\n        feedbackNo: \"Nu-ți face griji! Toți începem de undeva. Îți recomandăm să începi cu bazele.\"\r\n      },\r\n      {\r\n        id: 2,\r\n        text: \"Ai lucrat înainte cu Vue.js?\",\r\n        feedbackYes: \"Perfect! Cunoștințele tale de Vue.js vor fi foarte utile.\",\r\n        feedbackNo: \"Vue.js este un framework excelent pentru început. Începe cu documentația oficială.\"\r\n      },\r\n      {\r\n        id: 3,\r\n        text: \"Ai experiență cu sisteme de versionare (Git)?\",\r\n        feedbackYes: \"Foarte bine! Git este esențial în dezvoltarea modernă.\",\r\n        feedbackNo: \"Git este un instrument fundamental. Începe cu tutorialele de bază.\"\r\n      }\r\n    ]\r\n\r\n    const currentQuestionIndex = ref(0)\r\n    const answers = ref({})\r\n    const userEmail = ref('')\r\n    const emailError = ref(false)\r\n\r\n    const currentQuestion = computed(() =>\r\n      questions[currentQuestionIndex.value]\r\n    )\r\n\r\n    const isCompleted = computed(() =>\r\n      currentQuestionIndex.value >= questions.length\r\n    )\r\n\r\n    const isValidEmail = computed(() => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n      return emailRegex.test(userEmail.value)\r\n    })\r\n\r\n    const generatePDF = () => {\r\n      const doc = new jsPDF({\r\n        unit: 'mm',\r\n        format: 'a4',\r\n        putOnlyUsedFonts: true,\r\n        margins: {\r\n          top: 20,\r\n          bottom: 20,\r\n          left: 20,\r\n          right: 20\r\n        }\r\n      })\r\n\r\n      // Adăugăm font-ul cu suport pentru diacritice\r\n      doc.setFont(\"helvetica\", \"normal\")\r\n      doc.setLanguage(\"ro\")\r\n\r\n      // Header\r\n      doc.setFontSize(24)\r\n      doc.setTextColor(44, 62, 80)\r\n      doc.text('Raport de Evaluare', 105, 20, { align: 'center' })\r\n\r\n      // Data\r\n      doc.setFontSize(12)\r\n      doc.setTextColor(128, 128, 128)\r\n      const date = new Date().toLocaleDateString('ro-RO', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit'\r\n      })\r\n      doc.text(`Generat la: ${date}`, 20, 30)\r\n\r\n      let yPos = 50\r\n\r\n      // Procesare întrebări și răspunsuri\r\n      questions.forEach((question, index) => {\r\n        const answer = answers.value[question.id]\r\n\r\n        // Verifică spațiul disponibil\r\n        if (yPos > 250) {\r\n          doc.addPage()\r\n          yPos = 20\r\n        }\r\n\r\n        // Întrebarea\r\n        doc.setFontSize(14)\r\n        doc.setTextColor(44, 62, 80)\r\n        const questionText = `${index + 1}. ${question.text}`\r\n        doc.text(questionText, 20, yPos)\r\n        yPos += 10\r\n\r\n        // Răspuns\r\n        doc.setFontSize(12)\r\n        doc.setTextColor(52, 152, 219)\r\n        const answerText = `Răspuns: ${answer ? 'Da' : 'Nu'}`\r\n        doc.text(answerText, 20, yPos)\r\n        yPos += 8\r\n\r\n        // Feedback\r\n        doc.setTextColor(70, 70, 70)\r\n        const feedback = answer ? question.feedbackYes : question.feedbackNo\r\n\r\n        // Împărțirea textului în linii cu respectarea limitelor paginii\r\n        const splitFeedback = doc.splitTextToSize(feedback, 170)\r\n        splitFeedback.forEach(line => {\r\n          // Verifică din nou spațiul disponibil pentru fiecare linie\r\n          if (yPos > 270) {\r\n            doc.addPage()\r\n            yPos = 20\r\n          }\r\n          doc.text(line, 20, yPos)\r\n          yPos += 7\r\n        })\r\n\r\n        yPos += 15 // spațiu între întrebări\r\n      })\r\n\r\n      // Footer\r\n      doc.setFontSize(10)\r\n      doc.setTextColor(128, 128, 128)\r\n      doc.text('Document generat automat', 105, 285, { align: 'center' })\r\n\r\n      return doc.output('blob')\r\n    }\r\n\r\n    const answerQuestion = (answer) => {\r\n      answers.value[currentQuestion.value.id] = answer\r\n      currentQuestionIndex.value++\r\n    }\r\n\r\n    const submitResults = async () => {\r\n      if (!isValidEmail.value) {\r\n        emailError.value = true\r\n        return\r\n      }\r\n\r\n      try {\r\n        const pdfBlob = generatePDF()\r\n        const formData = new FormData()\r\n        formData.append('pdf', pdfBlob, 'rezultate.pdf')\r\n        formData.append('email', userEmail.value)\r\n\r\n        await axios.post('http://localhost:3000/send-results', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        })\r\n\r\n        alert('Rezultatele au fost trimise pe email!')\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n        alert('A apărut o eroare. Te rugăm să încerci din nou.')\r\n      }\r\n    }\r\n\r\n    return {\r\n      questions,\r\n      currentQuestion,\r\n      currentQuestionIndex,\r\n      isCompleted,\r\n      userEmail,\r\n      emailError,\r\n      isValidEmail,\r\n      answerQuestion,\r\n      submitResults\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAmEA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,KAAI,QAAS,OAAM;AAC5B,OAAOC,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAI,CAChB;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,kCAAkC;MACxCC,WAAW,EAAE,kEAAkE;MAC/EC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,8BAA8B;MACpCC,WAAW,EAAE,2DAA2D;MACxEC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,+CAA+C;MACrDC,WAAW,EAAE,wDAAwD;MACrEC,UAAU,EAAE;IACd,EACF;IAEA,MAAMC,oBAAmB,GAAIX,GAAG,CAAC,CAAC;IAClC,MAAMY,OAAM,GAAIZ,GAAG,CAAC,CAAC,CAAC;IACtB,MAAMa,SAAQ,GAAIb,GAAG,CAAC,EAAE;IACxB,MAAMc,UAAS,GAAId,GAAG,CAAC,KAAK;IAE5B,MAAMe,eAAc,GAAId,QAAQ,CAAC,MAC/BK,SAAS,CAACK,oBAAoB,CAACK,KAAK,CACtC;IAEA,MAAMC,WAAU,GAAIhB,QAAQ,CAAC,MAC3BU,oBAAoB,CAACK,KAAI,IAAKV,SAAS,CAACY,MAC1C;IAEA,MAAMC,YAAW,GAAIlB,QAAQ,CAAC,MAAM;MAClC,MAAMmB,UAAS,GAAI,4BAA2B;MAC9C,OAAOA,UAAU,CAACC,IAAI,CAACR,SAAS,CAACG,KAAK;IACxC,CAAC;IAED,MAAMM,WAAU,GAAIA,CAAA,KAAM;MACxB,MAAMC,GAAE,GAAI,IAAIrB,KAAK,CAAC;QACpBsB,IAAI,EAAE,IAAI;QACVC,MAAM,EAAE,IAAI;QACZC,gBAAgB,EAAE,IAAI;QACtBC,OAAO,EAAE;UACPC,GAAG,EAAE,EAAE;UACPC,MAAM,EAAE,EAAE;UACVC,IAAI,EAAE,EAAE;UACRC,KAAK,EAAE;QACT;MACF,CAAC;;MAED;MACAR,GAAG,CAACS,OAAO,CAAC,WAAW,EAAE,QAAQ;MACjCT,GAAG,CAACU,WAAW,CAAC,IAAI;;MAEpB;MACAV,GAAG,CAACW,WAAW,CAAC,EAAE;MAClBX,GAAG,CAACY,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;MAC3BZ,GAAG,CAACf,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE,EAAE,EAAE;QAAE4B,KAAK,EAAE;MAAS,CAAC;;MAE3D;MACAb,GAAG,CAACW,WAAW,CAAC,EAAE;MAClBX,GAAG,CAACY,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;MAC9B,MAAME,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;QAClDC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,SAAS;QAChBC,GAAG,EAAE;MACP,CAAC;MACDnB,GAAG,CAACf,IAAI,CAAC,eAAe6B,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE;MAEtC,IAAIM,IAAG,GAAI,EAAC;;MAEZ;MACArC,SAAS,CAACsC,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;QACrC,MAAMC,MAAK,GAAInC,OAAO,CAACI,KAAK,CAAC6B,QAAQ,CAACtC,EAAE;;QAExC;QACA,IAAIoC,IAAG,GAAI,GAAG,EAAE;UACdpB,GAAG,CAACyB,OAAO,CAAC;UACZL,IAAG,GAAI,EAAC;QACV;;QAEA;QACApB,GAAG,CAACW,WAAW,CAAC,EAAE;QAClBX,GAAG,CAACY,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;QAC3B,MAAMc,YAAW,GAAI,GAAGH,KAAI,GAAI,CAAC,KAAKD,QAAQ,CAACrC,IAAI,EAAC;QACpDe,GAAG,CAACf,IAAI,CAACyC,YAAY,EAAE,EAAE,EAAEN,IAAI;QAC/BA,IAAG,IAAK,EAAC;;QAET;QACApB,GAAG,CAACW,WAAW,CAAC,EAAE;QAClBX,GAAG,CAACY,YAAY,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG;QAC7B,MAAMe,UAAS,GAAI,YAAYH,MAAK,GAAI,IAAG,GAAI,IAAI,EAAC;QACpDxB,GAAG,CAACf,IAAI,CAAC0C,UAAU,EAAE,EAAE,EAAEP,IAAI;QAC7BA,IAAG,IAAK;;QAER;QACApB,GAAG,CAACY,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;QAC3B,MAAMgB,QAAO,GAAIJ,MAAK,GAAIF,QAAQ,CAACpC,WAAU,GAAIoC,QAAQ,CAACnC,UAAS;;QAEnE;QACA,MAAM0C,aAAY,GAAI7B,GAAG,CAAC8B,eAAe,CAACF,QAAQ,EAAE,GAAG;QACvDC,aAAa,CAACR,OAAO,CAACU,IAAG,IAAK;UAC5B;UACA,IAAIX,IAAG,GAAI,GAAG,EAAE;YACdpB,GAAG,CAACyB,OAAO,CAAC;YACZL,IAAG,GAAI,EAAC;UACV;UACApB,GAAG,CAACf,IAAI,CAAC8C,IAAI,EAAE,EAAE,EAAEX,IAAI;UACvBA,IAAG,IAAK;QACV,CAAC;QAEDA,IAAG,IAAK,EAAC,EAAE;MACb,CAAC;;MAED;MACApB,GAAG,CAACW,WAAW,CAAC,EAAE;MAClBX,GAAG,CAACY,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;MAC9BZ,GAAG,CAACf,IAAI,CAAC,0BAA0B,EAAE,GAAG,EAAE,GAAG,EAAE;QAAE4B,KAAK,EAAE;MAAS,CAAC;MAElE,OAAOb,GAAG,CAACgC,MAAM,CAAC,MAAM;IAC1B;IAEA,MAAMC,cAAa,GAAKT,MAAM,IAAK;MACjCnC,OAAO,CAACI,KAAK,CAACD,eAAe,CAACC,KAAK,CAACT,EAAE,IAAIwC,MAAK;MAC/CpC,oBAAoB,CAACK,KAAK,EAAC;IAC7B;IAEA,MAAMyC,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChC,IAAI,CAACtC,YAAY,CAACH,KAAK,EAAE;QACvBF,UAAU,CAACE,KAAI,GAAI,IAAG;QACtB;MACF;MAEA,IAAI;QACF,MAAM0C,OAAM,GAAIpC,WAAW,CAAC;QAC5B,MAAMqC,QAAO,GAAI,IAAIC,QAAQ,CAAC;QAC9BD,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAEH,OAAO,EAAE,eAAe;QAC/CC,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEhD,SAAS,CAACG,KAAK;QAExC,MAAMb,KAAK,CAAC2D,IAAI,CAAC,oCAAoC,EAAEH,QAAQ,EAAE;UAC/DI,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC;QAEDC,KAAK,CAAC,uCAAuC;MAC/C,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK;QAC7BD,KAAK,CAAC,iDAAiD;MACzD;IACF;IAEA,OAAO;MACL1D,SAAS;MACTS,eAAe;MACfJ,oBAAoB;MACpBM,WAAW;MACXJ,SAAS;MACTC,UAAU;MACVK,YAAY;MACZqC,cAAc;MACdC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}