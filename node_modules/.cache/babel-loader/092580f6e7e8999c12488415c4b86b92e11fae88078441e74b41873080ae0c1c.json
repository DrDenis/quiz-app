{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quiz-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"quiz-section\"\n};\nconst _hoisted_3 = {\n  class: \"question-card\"\n};\nconst _hoisted_4 = {\n  class: \"progress-text\"\n};\nconst _hoisted_5 = {\n  class: \"button-group\"\n};\nconst _hoisted_6 = {\n  class: \"progress-bar\"\n};\nconst _hoisted_7 = {\n  class: \"email-section\"\n};\nconst _hoisted_8 = {\n  class: \"email-form\"\n};\nconst _hoisted_9 = [\"disabled\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"error-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Secțiunea întrebări \"), !$setup.isCompleted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h2\", null, _toDisplayString($setup.currentQuestion.text), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, \" Întrebarea \" + _toDisplayString($setup.currentQuestionIndex + 1) + \" din \" + _toDisplayString($setup.questions.length), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    class: \"btn btn-yes\",\n    onClick: _cache[0] || (_cache[0] = $event => $setup.answerQuestion(true))\n  }, \" Da \"), _createElementVNode(\"button\", {\n    class: \"btn btn-no\",\n    onClick: _cache[1] || (_cache[1] = $event => $setup.answerQuestion(false))\n  }, \" Nu \")]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", {\n    class: \"progress-fill\",\n    style: _normalizeStyle({\n      width: `${$setup.currentQuestionIndex / $setup.questions.length * 100}%`\n    })\n  }, null, 4 /* STYLE */)])])])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Secțiunea email \"), _createElementVNode(\"div\", _hoisted_7, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Felicitări! Ai terminat chestionarul\", -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"p\", null, \"Introdu adresa ta de email pentru a primi rezultatele:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.userEmail = $event),\n    placeholder: \"your@email.com\",\n    class: _normalizeClass({\n      'error': $setup.emailError\n    })\n  }, null, 2 /* CLASS */), [[_vModelText, $setup.userEmail]]), _createElementVNode(\"button\", {\n    class: \"btn btn-submit\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.submitResults && $setup.submitResults(...args)),\n    disabled: !$setup.isValidEmail\n  }, \" Trimite Rezultatele \", 8 /* PROPS */, _hoisted_9)]), $setup.emailError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, \" Te rugăm să introduci o adresă de email validă \")) : _createCommentVNode(\"v-if\", true)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","$setup","isCompleted","_hoisted_2","_createElementVNode","_hoisted_3","_toDisplayString","currentQuestion","text","_hoisted_4","currentQuestionIndex","questions","length","_hoisted_5","onClick","_cache","$event","answerQuestion","_hoisted_6","style","_normalizeStyle","width","_Fragment","_hoisted_7","_hoisted_8","type","userEmail","placeholder","_normalizeClass","emailError","args","submitResults","disabled","isValidEmail","_hoisted_9","_hoisted_10"],"sources":["D:\\Projects\\Barmayoun\\vue-questions\\quizz-app-v2\\src\\components\\QuizComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-container\">\r\n    <!-- Secțiunea întrebări -->\r\n    <div v-if=\"!isCompleted\" class=\"quiz-section\">\r\n      <div class=\"question-card\">\r\n        <h2>{{ currentQuestion.text }}</h2>\r\n        <div class=\"progress-text\">\r\n          Întrebarea {{ currentQuestionIndex + 1 }} din {{ questions.length }}\r\n        </div>\r\n        <div class=\"button-group\">\r\n          <button class=\"btn btn-yes\" @click=\"answerQuestion(true)\">\r\n            Da\r\n          </button>\r\n          <button class=\"btn btn-no\" @click=\"answerQuestion(false)\">\r\n            Nu\r\n          </button>\r\n        </div>\r\n        <div class=\"progress-bar\">\r\n          <div class=\"progress-fill\" :style=\"{ width: `${(currentQuestionIndex / questions.length) * 100}%` }\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Secțiunea email -->\r\n    <div v-else class=\"email-section\">\r\n      <h2>Felicitări! Ai terminat chestionarul</h2>\r\n      <p>Introdu adresa ta de email pentru a primi rezultatele:</p>\r\n      <div class=\"email-form\">\r\n        <input type=\"email\" v-model=\"userEmail\" placeholder=\"your@email.com\" :class=\"{ 'error': emailError }\">\r\n        <button class=\"btn btn-submit\" @click=\"submitResults\" :disabled=\"!isValidEmail\">\r\n          Trimite Rezultatele\r\n        </button>\r\n      </div>\r\n      <p v-if=\"emailError\" class=\"error-text\">\r\n        Te rugăm să introduci o adresă de email validă\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed } from 'vue'\r\nimport { jsPDF } from 'jspdf'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'QuizComponent',\r\n  setup() {\r\n    const questions = [\r\n      {\r\n        id: 1,\r\n        text: \"Ai experiență în dezvoltare web?\",\r\n        feedbackYes: \"Excelent! Experiența ta în dezvoltare web este un atu important.\",\r\n        feedbackNo: \"Nu-ți face griji! Toți începem de undeva. Îți recomandăm să începi cu bazele.\"\r\n      },\r\n      {\r\n        id: 2,\r\n        text: \"Ai lucrat înainte cu Vue.js?\",\r\n        feedbackYes: \"Perfect! Cunoștințele tale de Vue.js vor fi foarte utile.\",\r\n        feedbackNo: \"Vue.js este un framework excelent pentru început. Începe cu documentația oficială.\"\r\n      },\r\n      {\r\n        id: 3,\r\n        text: \"Ai experiență cu sisteme de versionare (Git)?\",\r\n        feedbackYes: \"Foarte bine! Git este esențial în dezvoltarea modernă.\",\r\n        feedbackNo: \"Git este un instrument fundamental. Începe cu tutorialele de bază.\"\r\n      }\r\n    ]\r\n\r\n    const currentQuestionIndex = ref(0)\r\n    const answers = ref({})\r\n    const userEmail = ref('')\r\n    const emailError = ref(false)\r\n\r\n    const currentQuestion = computed(() =>\r\n      questions[currentQuestionIndex.value]\r\n    )\r\n\r\n    const isCompleted = computed(() =>\r\n      currentQuestionIndex.value >= questions.length\r\n    )\r\n\r\n    const isValidEmail = computed(() => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n      return emailRegex.test(userEmail.value)\r\n    })\r\n\r\n    const generatePDF = () => {\r\n      const doc = new jsPDF()\r\n      let yPos = 20\r\n\r\n      // Header\r\n      doc.setFontSize(20)\r\n      doc.text('Rezultatele Tale', 105, yPos, { align: 'center' })\r\n      yPos += 20\r\n\r\n      // Date\r\n      doc.setFontSize(12)\r\n      doc.text(`Data: ${new Date().toLocaleDateString()}`, 20, yPos)\r\n      yPos += 20\r\n\r\n      // Questions and Answers\r\n      questions.forEach((question, index) => {\r\n        const answer = answers.value[question.id]\r\n\r\n        // Question\r\n        doc.setFont(undefined, 'bold')\r\n        doc.text(`${index + 1}. ${question.text}`, 20, yPos)\r\n        yPos += 10\r\n\r\n        // Answer and Feedback\r\n        doc.setFont(undefined, 'normal')\r\n        doc.text(\r\n          `Răspuns: ${answer ? 'Da' : 'Nu'}`,\r\n          20,\r\n          yPos\r\n        )\r\n        yPos += 10\r\n\r\n        // Feedback\r\n        const feedback = answer ? question.feedbackYes : question.feedbackNo\r\n        const feedbackLines = doc.splitTextToSize(feedback, 170)\r\n        feedbackLines.forEach(line => {\r\n          doc.text(line, 20, yPos)\r\n          yPos += 7\r\n        })\r\n\r\n        yPos += 10\r\n\r\n        // Add new page if needed\r\n        if (yPos > 250 && index < questions.length - 1) {\r\n          doc.addPage()\r\n          yPos = 20\r\n        }\r\n      })\r\n\r\n      return doc.output('blob')\r\n    }\r\n\r\n    const answerQuestion = (answer) => {\r\n      answers.value[currentQuestion.value.id] = answer\r\n      currentQuestionIndex.value++\r\n    }\r\n\r\n    const submitResults = async () => {\r\n      if (!isValidEmail.value) {\r\n        emailError.value = true\r\n        return\r\n      }\r\n\r\n      try {\r\n        const pdfBlob = generatePDF()\r\n        const formData = new FormData()\r\n        formData.append('pdf', pdfBlob, 'rezultate.pdf')\r\n        formData.append('email', userEmail.value)\r\n\r\n        await axios.post('http://localhost:3000/send-results', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        })\r\n\r\n        alert('Rezultatele au fost trimise pe email!')\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n        alert('A apărut o eroare. Te rugăm să încerci din nou.')\r\n      }\r\n    }\r\n\r\n    return {\r\n      questions,\r\n      currentQuestion,\r\n      currentQuestionIndex,\r\n      isCompleted,\r\n      userEmail,\r\n      emailError,\r\n      isValidEmail,\r\n      answerQuestion,\r\n      submitResults\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.quiz-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.question-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 2rem;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 2rem;\r\n\r\n  h2 {\r\n    margin-bottom: 1.5rem;\r\n    color: #2c3e50;\r\n  }\r\n}\r\n\r\n.progress-text {\r\n  text-align: center;\r\n  color: #666;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.btn {\r\n  padding: 0.8rem 2rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n  }\r\n}\r\n\r\n.btn-yes {\r\n  background: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.btn-no {\r\n  background: #f44336;\r\n  color: white;\r\n}\r\n\r\n.btn-submit {\r\n  background: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.progress-bar {\r\n  width: 100%;\r\n  height: 8px;\r\n  background: #eee;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background: #2196F3;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.email-section {\r\n  text-align: center;\r\n\r\n  h2 {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  p {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n}\r\n\r\n.email-form {\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-bottom: 1rem;\r\n\r\n  input {\r\n    flex: 1;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n\r\n    &.error {\r\n      border-color: #f44336;\r\n    }\r\n  }\r\n}\r\n\r\n.error-text {\r\n  color: #f44336;\r\n  font-size: 0.9rem;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAD7BC,GAAA;EAG6BD,KAAK,EAAC;;;EACxBA,KAAK,EAAC;AAAe;;EAEnBA,KAAK,EAAC;AAAe;;EAGrBA,KAAK,EAAC;AAAc;;EAQpBA,KAAK,EAAC;AAAc;;EAOjBA,KAAK,EAAC;AAAe;;EAG1BA,KAAK,EAAC;AAAY;mBA3B7B;;EAAAC,GAAA;EAiC2BD,KAAK,EAAC;;;uBAhC/BE,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,mBAAA,yBAA4B,E,CAChBC,MAAA,CAAAC,WAAW,I,cAAvBJ,mBAAA,CAkBM,OAlBNK,UAkBM,GAjBJC,mBAAA,CAgBM,OAhBNC,UAgBM,GAfJD,mBAAA,CAAmC,YAAAE,gBAAA,CAA5BL,MAAA,CAAAM,eAAe,CAACC,IAAI,kBAC3BJ,mBAAA,CAEM,OAFNK,UAEM,EAFqB,cACd,GAAAH,gBAAA,CAAGL,MAAA,CAAAS,oBAAoB,QAAO,OAAK,GAAAJ,gBAAA,CAAGL,MAAA,CAAAU,SAAS,CAACC,MAAM,kBAEnER,mBAAA,CAOM,OAPNS,UAOM,GANJT,mBAAA,CAES;IAFDR,KAAK,EAAC,aAAa;IAAEkB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEf,MAAA,CAAAgB,cAAc;KAAQ,MAE1D,GACAb,mBAAA,CAES;IAFDR,KAAK,EAAC,YAAY;IAAEkB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEf,MAAA,CAAAgB,cAAc;KAAS,MAE1D,E,GAEFb,mBAAA,CAEM,OAFNc,UAEM,GADJd,mBAAA,CAA2G;IAAtGR,KAAK,EAAC,eAAe;IAAEuB,KAAK,EAlB3CC,eAAA;MAAAC,KAAA,KAkB0DpB,MAAA,CAAAS,oBAAoB,GAAGT,MAAA,CAAAU,SAAS,CAACC,MAAM;IAAA;kDAM7Fd,mBAAA,CAYMwB,SAAA;IApCVzB,GAAA;EAAA,IAuBIG,mBAAA,qBAAwB,EACxBI,mBAAA,CAYM,OAZNmB,UAYM,G,0BAXJnB,mBAAA,CAA6C,YAAzC,sCAAoC,sB,0BACxCA,mBAAA,CAA6D,WAA1D,wDAAsD,sBACzDA,mBAAA,CAKM,OALNoB,UAKM,G,gBAJJpB,mBAAA,CAAsG;IAA/FqB,IAAI,EAAC,OAAO;IA5B3B,uBAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA4BqCf,MAAA,CAAAyB,SAAS,GAAAV,MAAA;IAAEW,WAAW,EAAC,gBAAgB;IAAE/B,KAAK,EA5BnFgC,eAAA;MAAA,SA4BgG3B,MAAA,CAAA4B;IAAU;0CAArE5B,MAAA,CAAAyB,SAAS,E,GACtCtB,mBAAA,CAES;IAFDR,KAAK,EAAC,gBAAgB;IAAEkB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAe,IAAA,KAAE7B,MAAA,CAAA8B,aAAA,IAAA9B,MAAA,CAAA8B,aAAA,IAAAD,IAAA,CAAa;IAAGE,QAAQ,GAAG/B,MAAA,CAAAgC;KAAc,uBAEhF,iBA/BRC,UAAA,E,GAiCejC,MAAA,CAAA4B,UAAU,I,cAAnB/B,mBAAA,CAEI,KAFJqC,WAEI,EAFoC,kDAExC,KAnCNnC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}