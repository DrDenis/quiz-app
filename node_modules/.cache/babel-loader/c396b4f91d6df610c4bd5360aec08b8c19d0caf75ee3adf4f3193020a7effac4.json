{"ast":null,"code":"import { ref, computed } from 'vue';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport axios from 'axios';\nexport default {\n  name: 'QuizComponent',\n  setup() {\n    const questions = [{\n      id: 1,\n      text: \"Ai experiență în dezvoltare web?\",\n      feedbackYes: \"Excelent! Experiența ta în dezvoltare web este un atu important.\",\n      feedbackNo: \"Nu-ți face griji! Toți începem de undeva. Îți recomandăm să începi cu bazele.\"\n    }, {\n      id: 2,\n      text: \"Ai lucrat înainte cu Vue.js?\",\n      feedbackYes: \"Perfect! Cunoștințele tale de Vue.js vor fi foarte utile.\",\n      feedbackNo: \"Vue.js este un framework excelent pentru început. Începe cu documentația oficială.\"\n    }, {\n      id: 3,\n      text: \"Ai experiență cu sisteme de versionare (Git)?\",\n      feedbackYes: \"Foarte bine! Git este esențial în dezvoltarea modernă.\",\n      feedbackNo: \"Git este un instrument fundamental. Începe cu tutorialele de bază.\"\n    }];\n    const currentQuestionIndex = ref(0);\n    const answers = ref({});\n    const userEmail = ref('');\n    const emailError = ref(false);\n    const currentQuestion = computed(() => questions[currentQuestionIndex.value]);\n    const isCompleted = computed(() => currentQuestionIndex.value >= questions.length);\n    const isValidEmail = computed(() => {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(userEmail.value);\n    });\n    const generatePDF = () => {\n      // Înregistrăm fonturile\n      pdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n      // Definim stilurile documentului\n      const styles = {\n        header: {\n          fontSize: 22,\n          bold: true,\n          alignment: 'center',\n          margin: [0, 0, 0, 20]\n        },\n        date: {\n          fontSize: 12,\n          alignment: 'center',\n          margin: [0, 0, 0, 20]\n        },\n        question: {\n          fontSize: 12,\n          margin: [0, 10, 0, 5]\n        },\n        answer: {\n          fontSize: 12,\n          margin: [0, 0, 0, 5]\n        },\n        feedback: {\n          fontSize: 12,\n          margin: [0, 0, 0, 15],\n          color: '#666666'\n        },\n        footer: {\n          fontSize: 10,\n          alignment: 'center',\n          margin: [0, 20, 0, 0]\n        }\n      };\n\n      // Construim conținutul documentului\n      const docDefinition = {\n        content: [{\n          text: 'Raport de Evaluare',\n          style: 'header'\n        }, {\n          text: `Generat la: ${new Date().toLocaleDateString('ro-RO')}`,\n          style: 'date'\n        }, ...questions.flatMap((question, index) => {\n          const answer = answers.value[question.id];\n          return [{\n            text: `${index + 1}. ${question.text}`,\n            style: 'question'\n          }, {\n            text: `Răspuns: ${answer ? 'Da' : 'Nu'}`,\n            style: 'answer'\n          }, {\n            text: answer ? question.feedbackYes : question.feedbackNo,\n            style: 'feedback'\n          }];\n        }), {\n          text: 'Document generat automat',\n          style: 'footer'\n        }],\n        defaultStyle: {\n          font: 'Roboto'\n        },\n        styles: styles,\n        pageMargins: [40, 40, 40, 40]\n      };\n\n      // Generăm PDF-ul\n      const pdfDocGenerator = pdfMake.createPdf(docDefinition);\n      return new Promise(resolve => {\n        pdfDocGenerator.getBlob(blob => {\n          resolve(blob);\n        });\n      });\n    };\n    const answerQuestion = answer => {\n      answers.value[currentQuestion.value.id] = answer;\n      currentQuestionIndex.value++;\n    };\n    const submitResults = async () => {\n      if (!isValidEmail.value) {\n        emailError.value = true;\n        return;\n      }\n      try {\n        const pdfBlob = await generatePDF();\n        const formData = new FormData();\n        formData.append('pdf', pdfBlob, 'rezultate.pdf');\n        formData.append('email', userEmail.value);\n        const apiUrl = process.env.VUE_APP_API_URL || 'http://localhost:3000';\n        await axios.post('http://localhost:3000/send-results', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert('Rezultatele au fost trimise pe email!');\n      } catch (error) {\n        console.error('Error:', error);\n        alert('A apărut o eroare. Te rugăm să încerci din nou.');\n      }\n    };\n    return {\n      questions,\n      currentQuestion,\n      currentQuestionIndex,\n      isCompleted,\n      userEmail,\n      emailError,\n      isValidEmail,\n      answerQuestion,\n      submitResults\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","pdfMake","pdfFonts","axios","name","setup","questions","id","text","feedbackYes","feedbackNo","currentQuestionIndex","answers","userEmail","emailError","currentQuestion","value","isCompleted","length","isValidEmail","emailRegex","test","generatePDF","vfs","styles","header","fontSize","bold","alignment","margin","date","question","answer","feedback","color","footer","docDefinition","content","style","Date","toLocaleDateString","flatMap","index","defaultStyle","font","pageMargins","pdfDocGenerator","createPdf","Promise","resolve","getBlob","blob","answerQuestion","submitResults","pdfBlob","formData","FormData","append","apiUrl","process","env","VUE_APP_API_URL","post","headers","alert","error","console"],"sources":["D:\\Projects\\Barmayoun\\vue-questions\\quizz-app-v2\\src\\components\\QuizComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-2xl mx-auto\">\r\n    <div v-if=\"!isCompleted\" class=\"bg-white/70 backdrop-blur-lg rounded-2xl p-8 shadow-lg border border-gray-100\">\r\n      <div class=\"space-y-6\">\r\n        <div class=\"flex items-center justify-between mb-6\">\r\n          <span class=\"text-sm font-medium text-gray-500\">\r\n            Progres\r\n          </span>\r\n          <span class=\"text-sm font-medium text-gray-500\">\r\n            {{ currentQuestionIndex + 1 }}/{{ questions.length }}\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"w-full bg-gray-200 rounded-full h-2 mb-8\">\r\n          <div class=\"bg-primary rounded-full h-2 transition-all duration-300\"\r\n            :style=\"{ width: `${(currentQuestionIndex / questions.length) * 100}%` }\"></div>\r\n        </div>\r\n\r\n        <h2 class=\"text-2xl font-medium text-gray-800 mb-8\">\r\n          {{ currentQuestion.text }}\r\n        </h2>\r\n\r\n        <div class=\"flex gap-4 justify-center\">\r\n          <button @click=\"answerQuestion(true)\"\r\n            class=\"flex-1 py-3 px-6 bg-primary hover:bg-primary/90 text-gray-800 rounded-xl shadow-md hover:shadow-lg transition-all duration-200\">\r\n            Da\r\n          </button>\r\n          <button @click=\"answerQuestion(false)\"\r\n            class=\"flex-1 py-3 px-6 bg-white hover:bg-gray-50 text-gray-800 border border-gray-200 rounded-xl shadow-sm hover:shadow-md transition-all duration-200\">\r\n            Nu\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else class=\"bg-white/70 backdrop-blur-lg rounded-2xl p-8 shadow-lg border border-gray-100\">\r\n      <div class=\"text-center space-y-6\">\r\n        <div class=\"mb-8\">\r\n          <div class=\"inline-flex items-center justify-center w-16 h-16 bg-primary/20 rounded-full mb-4\">\r\n            <svg class=\"w-8 h-8 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\r\n            </svg>\r\n          </div>\r\n          <h2 class=\"text-2xl font-semibold text-gray-800 mb-2\">\r\n            Felicitări! Ai finalizat evaluarea\r\n          </h2>\r\n          <p class=\"text-gray-600\">\r\n            Introdu adresa ta de email pentru a primi raportul personalizat.\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"max-w-md mx-auto\">\r\n          <input type=\"email\" v-model=\"userEmail\" placeholder=\"email@example.com\"\r\n            class=\"w-full px-4 py-3 rounded-xl border border-gray-200 mb-4 focus:ring-2 focus:ring-primary/50 focus:border-primary outline-none\"\r\n            :class=\"{ 'border-red-300': emailError }\">\r\n          <button @click=\"submitResults\"\r\n            class=\"w-full py-3 px-6 bg-primary hover:bg-primary/90 text-gray-800 rounded-xl shadow-md hover:shadow-lg transition-all duration-200 disabled:opacity-50\"\r\n            :disabled=\"!isValidEmail\">\r\n            Trimite Rezultatele\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed } from 'vue'\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'QuizComponent',\r\n  setup() {\r\n    const questions = [\r\n      {\r\n        id: 1,\r\n        text: \"Ai experiență în dezvoltare web?\",\r\n        feedbackYes: \"Excelent! Experiența ta în dezvoltare web este un atu important.\",\r\n        feedbackNo: \"Nu-ți face griji! Toți începem de undeva. Îți recomandăm să începi cu bazele.\"\r\n      },\r\n      {\r\n        id: 2,\r\n        text: \"Ai lucrat înainte cu Vue.js?\",\r\n        feedbackYes: \"Perfect! Cunoștințele tale de Vue.js vor fi foarte utile.\",\r\n        feedbackNo: \"Vue.js este un framework excelent pentru început. Începe cu documentația oficială.\"\r\n      },\r\n      {\r\n        id: 3,\r\n        text: \"Ai experiență cu sisteme de versionare (Git)?\",\r\n        feedbackYes: \"Foarte bine! Git este esențial în dezvoltarea modernă.\",\r\n        feedbackNo: \"Git este un instrument fundamental. Începe cu tutorialele de bază.\"\r\n      }\r\n    ]\r\n\r\n    const currentQuestionIndex = ref(0)\r\n    const answers = ref({})\r\n    const userEmail = ref('')\r\n    const emailError = ref(false)\r\n\r\n    const currentQuestion = computed(() =>\r\n      questions[currentQuestionIndex.value]\r\n    )\r\n\r\n    const isCompleted = computed(() =>\r\n      currentQuestionIndex.value >= questions.length\r\n    )\r\n\r\n    const isValidEmail = computed(() => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n      return emailRegex.test(userEmail.value)\r\n    })\r\n\r\n    const generatePDF = () => {\r\n      // Înregistrăm fonturile\r\n      pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\n      // Definim stilurile documentului\r\n      const styles = {\r\n        header: {\r\n          fontSize: 22,\r\n          bold: true,\r\n          alignment: 'center',\r\n          margin: [0, 0, 0, 20]\r\n        },\r\n        date: {\r\n          fontSize: 12,\r\n          alignment: 'center',\r\n          margin: [0, 0, 0, 20]\r\n        },\r\n        question: {\r\n          fontSize: 12,\r\n          margin: [0, 10, 0, 5]\r\n        },\r\n        answer: {\r\n          fontSize: 12,\r\n          margin: [0, 0, 0, 5]\r\n        },\r\n        feedback: {\r\n          fontSize: 12,\r\n          margin: [0, 0, 0, 15],\r\n          color: '#666666'\r\n        },\r\n        footer: {\r\n          fontSize: 10,\r\n          alignment: 'center',\r\n          margin: [0, 20, 0, 0]\r\n        }\r\n      };\r\n\r\n      // Construim conținutul documentului\r\n      const docDefinition = {\r\n        content: [\r\n          { text: 'Raport de Evaluare', style: 'header' },\r\n          {\r\n            text: `Generat la: ${new Date().toLocaleDateString('ro-RO')}`,\r\n            style: 'date'\r\n          },\r\n          ...questions.flatMap((question, index) => {\r\n            const answer = answers.value[question.id];\r\n            return [\r\n              {\r\n                text: `${index + 1}. ${question.text}`,\r\n                style: 'question'\r\n              },\r\n              {\r\n                text: `Răspuns: ${answer ? 'Da' : 'Nu'}`,\r\n                style: 'answer'\r\n              },\r\n              {\r\n                text: answer ? question.feedbackYes : question.feedbackNo,\r\n                style: 'feedback'\r\n              }\r\n            ];\r\n          }),\r\n          {\r\n            text: 'Document generat automat',\r\n            style: 'footer'\r\n          }\r\n        ],\r\n        defaultStyle: {\r\n          font: 'Roboto'\r\n        },\r\n        styles: styles,\r\n        pageMargins: [40, 40, 40, 40]\r\n      };\r\n\r\n      // Generăm PDF-ul\r\n      const pdfDocGenerator = pdfMake.createPdf(docDefinition);\r\n\r\n      return new Promise((resolve) => {\r\n        pdfDocGenerator.getBlob((blob) => {\r\n          resolve(blob);\r\n        });\r\n      });\r\n    };\r\n\r\n    const answerQuestion = (answer) => {\r\n      answers.value[currentQuestion.value.id] = answer\r\n      currentQuestionIndex.value++\r\n    }\r\n\r\n    const submitResults = async () => {\r\n      if (!isValidEmail.value) {\r\n        emailError.value = true;\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const pdfBlob = await generatePDF();\r\n        const formData = new FormData();\r\n        formData.append('pdf', pdfBlob, 'rezultate.pdf');\r\n        formData.append('email', userEmail.value);\r\n\r\n        const apiUrl = process.env.VUE_APP_API_URL || 'http://localhost:3000'\r\n\r\n        await axios.post('http://localhost:3000/send-results', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        });\r\n\r\n        alert('Rezultatele au fost trimise pe email!');\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        alert('A apărut o eroare. Te rugăm să încerci din nou.');\r\n      }\r\n    };\r\n\r\n    return {\r\n      questions,\r\n      currentQuestion,\r\n      currentQuestionIndex,\r\n      isCompleted,\r\n      userEmail,\r\n      emailError,\r\n      isValidEmail,\r\n      answerQuestion,\r\n      submitResults\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}