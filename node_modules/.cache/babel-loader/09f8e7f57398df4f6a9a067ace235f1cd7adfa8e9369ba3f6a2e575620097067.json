{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport BaseModal from '@/components/BaseModal.vue';\nimport axios from 'axios';\nconst API_URL = 'http://localhost:3000/api';\nexport default {\n  __name: 'AdminDashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const questions = ref([]);\n    const showAddModal = ref(false);\n    const currentQuestion = ref({\n      text: '',\n      feedbackYes: '',\n      feedbackNo: ''\n    });\n    const loadQuestions = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/questions`);\n        questions.value = response.data;\n        console.log('Questions loaded:', response.data);\n      } catch (error) {\n        console.error('Error loading questions:', error);\n      }\n    };\n    const saveQuestion = async () => {\n      try {\n        const response = await axios.post(`${API_URL}/questions`, currentQuestion.value);\n        console.log('Question saved:', response.data);\n        showAddModal.value = false;\n        currentQuestion.value = {\n          text: '',\n          feedbackYes: '',\n          feedbackNo: ''\n        };\n        await loadQuestions();\n      } catch (error) {\n        console.error('Error saving question:', error);\n        alert('A apărut o eroare la salvarea întrebării');\n      }\n    };\n    onMounted(loadQuestions);\n    const __returned__ = {\n      API_URL,\n      questions,\n      showAddModal,\n      currentQuestion,\n      loadQuestions,\n      saveQuestion,\n      ref,\n      onMounted,\n      BaseModal,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","BaseModal","axios","API_URL","questions","showAddModal","currentQuestion","text","feedbackYes","feedbackNo","loadQuestions","response","get","value","data","console","log","error","saveQuestion","post","alert"],"sources":["D:/Projects/Barmayoun/vue-questions/quizz-app-v2/src/views/AdminDashboard.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport BaseModal from '@/components/BaseModal.vue'\r\nimport axios from 'axios'\r\n\r\nconst API_URL = 'http://localhost:3000/api'\r\n\r\nconst questions = ref([])\r\nconst showAddModal = ref(false)\r\nconst currentQuestion = ref({\r\n  text: '',\r\n  feedbackYes: '',\r\n  feedbackNo: ''\r\n})\r\n\r\nconst loadQuestions = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/questions`)\r\n    questions.value = response.data\r\n    console.log('Questions loaded:', response.data)\r\n  } catch (error) {\r\n    console.error('Error loading questions:', error)\r\n  }\r\n}\r\n\r\nconst saveQuestion = async () => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/questions`, currentQuestion.value)\r\n    console.log('Question saved:', response.data)\r\n\r\n    showAddModal.value = false\r\n    currentQuestion.value = {\r\n      text: '',\r\n      feedbackYes: '',\r\n      feedbackNo: ''\r\n    }\r\n    await loadQuestions()\r\n  } catch (error) {\r\n    console.error('Error saving question:', error)\r\n    alert('A apărut o eroare la salvarea întrebării')\r\n  }\r\n}\r\n\r\nonMounted(loadQuestions)\r\n</script>\r\n\r\n<template>\r\n  <div class=\"min-h-screen bg-gray-50 py-8\">\r\n    <div class=\"max-w-7xl mx-auto px-4\">\r\n      <div class=\"flex justify-between items-center mb-8\">\r\n        <h1 class=\"text-2xl font-bold text-gray-900\">\r\n          Administrare Întrebări\r\n        </h1>\r\n        <button @click=\"showAddModal = true\" class=\"bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-lg\">\r\n          Adaugă Întrebare\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Lista întrebări -->\r\n      <div class=\"bg-white shadow rounded-lg\">\r\n        <div class=\"p-6 space-y-4\">\r\n          <div v-for=\"question in questions\" :key=\"question._id\"\r\n            class=\"border rounded-lg p-4 hover:shadow-md transition-all\">\r\n            <h3 class=\"font-medium\">{{ question.text }}</h3>\r\n            <div class=\"mt-2 text-sm text-gray-600\">\r\n              <p>Feedback Da: {{ question.feedbackYes }}</p>\r\n              <p>Feedback Nu: {{ question.feedbackNo }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Modal Adăugare -->\r\n      <BaseModal v-if=\"showAddModal\" @close=\"showAddModal = false\">\r\n        <template #header>\r\n          <h3 class=\"text-lg font-medium\">Adaugă Întrebare Nouă</h3>\r\n        </template>\r\n\r\n        <div class=\"space-y-4\">\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">\r\n              Întrebare\r\n            </label>\r\n            <input v-model=\"currentQuestion.text\" type=\"text\"\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\" />\r\n          </div>\r\n\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">\r\n              Feedback pentru Da\r\n            </label>\r\n            <textarea v-model=\"currentQuestion.feedbackYes\"\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\"></textarea>\r\n          </div>\r\n\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">\r\n              Feedback pentru Nu\r\n            </label>\r\n            <textarea v-model=\"currentQuestion.feedbackNo\"\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary\"></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <template #footer>\r\n          <button @click=\"saveQuestion\" class=\"bg-primary text-white px-4 py-2 rounded-lg hover:bg-primary/90\">\r\n            Salvează\r\n          </button>\r\n        </template>\r\n      </BaseModal>\r\n    </div>\r\n  </div>\r\n</template>"],"mappings":"AACA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;;;;;;IAE3C,MAAMC,SAAS,GAAGL,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMM,YAAY,GAAGN,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMO,eAAe,GAAGP,GAAG,CAAC;MAC1BQ,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE;IACd,CAAC,CAAC;IAEF,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGT,OAAO,YAAY,CAAC;QACxDC,SAAS,CAACS,KAAK,GAAGF,QAAQ,CAACG,IAAI;QAC/BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEL,QAAQ,CAACG,IAAI,CAAC;MACjD,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMP,QAAQ,GAAG,MAAMT,KAAK,CAACiB,IAAI,CAAC,GAAGhB,OAAO,YAAY,EAAEG,eAAe,CAACO,KAAK,CAAC;QAChFE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEL,QAAQ,CAACG,IAAI,CAAC;QAE7CT,YAAY,CAACQ,KAAK,GAAG,KAAK;QAC1BP,eAAe,CAACO,KAAK,GAAG;UACtBN,IAAI,EAAE,EAAE;UACRC,WAAW,EAAE,EAAE;UACfC,UAAU,EAAE;QACd,CAAC;QACD,MAAMC,aAAa,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CG,KAAK,CAAC,0CAA0C,CAAC;MACnD;IACF,CAAC;IAEDpB,SAAS,CAACU,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}