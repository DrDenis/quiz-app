{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport BaseModal from '@/components/BaseModal.vue';\nimport axios from 'axios';\n\n// Configurare axios pentru API\n\nexport default {\n  __name: 'AdminDashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const apiClient = axios.create({\n      baseURL: 'http://localhost:3000' // sau process.env.VUE_APP_API_URL dacă e configurat\n    });\n    const questions = ref([]);\n    const showAddModal = ref(false);\n    const currentQuestion = ref({\n      text: '',\n      feedbackYes: '',\n      feedbackNo: ''\n    });\n    const editingQuestion = ref(null);\n    const loadQuestions = async () => {\n      try {\n        const response = await apiClient.get('/api/questions');\n        questions.value = response.data;\n      } catch (error) {\n        console.error('Error loading questions:', error);\n      }\n    };\n    const saveQuestion = async () => {\n      try {\n        if (editingQuestion.value) {\n          await apiClient.put(`/api/questions/${editingQuestion.value}`, currentQuestion.value);\n        } else {\n          await apiClient.post('/api/questions', currentQuestion.value);\n        }\n        showAddModal.value = false;\n        editingQuestion.value = null;\n        currentQuestion.value = {\n          text: '',\n          feedbackYes: '',\n          feedbackNo: ''\n        };\n        await loadQuestions();\n      } catch (error) {\n        console.error('Error saving question:', error);\n        alert('Eroare la salvarea întrebării');\n      }\n    };\n    const deleteQuestion = async id => {\n      if (confirm('Ești sigur că vrei să ștergi această întrebare?')) {\n        try {\n          await apiClient.delete(`/api/questions/${id}`);\n          await loadQuestions();\n        } catch (error) {\n          console.error('Error deleting question:', error);\n          alert('Eroare la ștergerea întrebării');\n        }\n      }\n    };\n    onMounted(loadQuestions);\n    const __returned__ = {\n      apiClient,\n      questions,\n      showAddModal,\n      currentQuestion,\n      editingQuestion,\n      loadQuestions,\n      saveQuestion,\n      deleteQuestion,\n      ref,\n      onMounted,\n      BaseModal,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","BaseModal","axios","apiClient","create","baseURL","questions","showAddModal","currentQuestion","text","feedbackYes","feedbackNo","editingQuestion","loadQuestions","response","get","value","data","error","console","saveQuestion","put","post","alert","deleteQuestion","id","confirm","delete"],"sources":["D:/Projects/Barmayoun/vue-questions/quizz-app-v2/src/views/AdminDashboard.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport BaseModal from '@/components/BaseModal.vue'\r\nimport axios from 'axios'\r\n\r\n// Configurare axios pentru API\r\nconst apiClient = axios.create({\r\n  baseURL: 'http://localhost:3000'  // sau process.env.VUE_APP_API_URL dacă e configurat\r\n})\r\n\r\nconst questions = ref([])\r\nconst showAddModal = ref(false)\r\nconst currentQuestion = ref({\r\n  text: '',\r\n  feedbackYes: '',\r\n  feedbackNo: ''\r\n})\r\nconst editingQuestion = ref(null)\r\n\r\nconst loadQuestions = async () => {\r\n  try {\r\n    const response = await apiClient.get('/api/questions')\r\n    questions.value = response.data\r\n  } catch (error) {\r\n    console.error('Error loading questions:', error)\r\n  }\r\n}\r\n\r\nconst saveQuestion = async () => {\r\n  try {\r\n    if (editingQuestion.value) {\r\n      await apiClient.put(`/api/questions/${editingQuestion.value}`, currentQuestion.value)\r\n    } else {\r\n      await apiClient.post('/api/questions', currentQuestion.value)\r\n    }\r\n\r\n    showAddModal.value = false\r\n    editingQuestion.value = null\r\n    currentQuestion.value = { text: '', feedbackYes: '', feedbackNo: '' }\r\n    await loadQuestions()\r\n  } catch (error) {\r\n    console.error('Error saving question:', error)\r\n    alert('Eroare la salvarea întrebării')\r\n  }\r\n}\r\n\r\nconst deleteQuestion = async (id) => {\r\n  if (confirm('Ești sigur că vrei să ștergi această întrebare?')) {\r\n    try {\r\n      await apiClient.delete(`/api/questions/${id}`)\r\n      await loadQuestions()\r\n    } catch (error) {\r\n      console.error('Error deleting question:', error)\r\n      alert('Eroare la ștergerea întrebării')\r\n    }\r\n  }\r\n}\r\n\r\nonMounted(loadQuestions)\r\n</script>\r\n\r\n<template>\r\n  <div class=\"min-h-screen bg-gray-50 py-8\">\r\n    <div class=\"max-w-7xl mx-auto px-4\">\r\n      <!-- Header -->\r\n      <div class=\"flex justify-between items-center mb-8\">\r\n        <h1 class=\"text-2xl font-bold text-gray-900\">\r\n          Dashboard Administrator\r\n        </h1>\r\n        <button @click=\"showAddModal = true\" class=\"bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-lg\">\r\n          Adaugă Întrebare\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Lista întrebări -->\r\n      <div class=\"bg-white shadow rounded-lg\">\r\n        <div class=\"p-6 space-y-4\">\r\n          <div v-for=\"question in questions\" :key=\"question._id\"\r\n            class=\"border rounded-lg p-4 hover:shadow-md transition-all\">\r\n            <div class=\"flex justify-between items-start\">\r\n              <div>\r\n                <h3 class=\"font-medium\">{{ question.text }}</h3>\r\n                <div class=\"mt-2 text-sm text-gray-600\">\r\n                  <p>Feedback Da: {{ question.feedbackYes }}</p>\r\n                  <p>Feedback Nu: {{ question.feedbackNo }}</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"flex space-x-2\">\r\n                <button @click=\"editQuestion(question)\" class=\"text-blue-600 hover:text-blue-800\">\r\n                  Editează\r\n                </button>\r\n                <button @click=\"deleteQuestion(question._id)\" class=\"text-red-600 hover:text-red-800\">\r\n                  Șterge\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal Adăugare/Editare -->\r\n    <BaseModal v-if=\"showAddModal\" @close=\"showAddModal = false\">\r\n      <template #header>\r\n        <h3 class=\"text-lg font-medium\">\r\n          {{ editingQuestion ? 'Editează Întrebarea' : 'Adaugă Întrebare Nouă' }}\r\n        </h3>\r\n      </template>\r\n\r\n      <div class=\"space-y-4\">\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-gray-700\">\r\n            Întrebare\r\n          </label>\r\n          <input v-model=\"currentQuestion.text\" type=\"text\"\r\n            class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-gray-700\">\r\n            Feedback pentru Da\r\n          </label>\r\n          <textarea v-model=\"currentQuestion.feedbackYes\"\r\n            class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\"></textarea>\r\n        </div>\r\n\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-gray-700\">\r\n            Feedback pentru Nu\r\n          </label>\r\n          <textarea v-model=\"currentQuestion.feedbackNo\"\r\n            class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\"></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      <template #footer>\r\n        <button @click=\"saveQuestion\" class=\"bg-primary text-white px-4 py-2 rounded-lg\">\r\n          {{ editingQuestion ? 'Salvează' : 'Adaugă' }}\r\n        </button>\r\n      </template>\r\n    </BaseModal>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.modal-enter-active,\r\n.modal-leave-active {\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.modal-enter-from,\r\n.modal-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>"],"mappings":"AACA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;;;;;;;IACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;MAC7BC,OAAO,EAAE,uBAAuB,CAAE;IACpC,CAAC,CAAC;IAEF,MAAMC,SAAS,GAAGP,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMQ,YAAY,GAAGR,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMS,eAAe,GAAGT,GAAG,CAAC;MAC1BU,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE;IACd,CAAC,CAAC;IACF,MAAMC,eAAe,GAAGb,GAAG,CAAC,IAAI,CAAC;IAEjC,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,SAAS,CAACY,GAAG,CAAC,gBAAgB,CAAC;QACtDT,SAAS,CAACU,KAAK,GAAGF,QAAQ,CAACG,IAAI;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,IAAIR,eAAe,CAACI,KAAK,EAAE;UACzB,MAAMb,SAAS,CAACkB,GAAG,CAAC,kBAAkBT,eAAe,CAACI,KAAK,EAAE,EAAER,eAAe,CAACQ,KAAK,CAAC;QACvF,CAAC,MAAM;UACL,MAAMb,SAAS,CAACmB,IAAI,CAAC,gBAAgB,EAAEd,eAAe,CAACQ,KAAK,CAAC;QAC/D;QAEAT,YAAY,CAACS,KAAK,GAAG,KAAK;QAC1BJ,eAAe,CAACI,KAAK,GAAG,IAAI;QAC5BR,eAAe,CAACQ,KAAK,GAAG;UAAEP,IAAI,EAAE,EAAE;UAAEC,WAAW,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAG,CAAC;QACrE,MAAME,aAAa,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CK,KAAK,CAAC,+BAA+B,CAAC;MACxC;IACF,CAAC;IAED,MAAMC,cAAc,GAAG,MAAOC,EAAE,IAAK;MACnC,IAAIC,OAAO,CAAC,iDAAiD,CAAC,EAAE;QAC9D,IAAI;UACF,MAAMvB,SAAS,CAACwB,MAAM,CAAC,kBAAkBF,EAAE,EAAE,CAAC;UAC9C,MAAMZ,aAAa,CAAC,CAAC;QACvB,CAAC,CAAC,OAAOK,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAChDK,KAAK,CAAC,gCAAgC,CAAC;QACzC;MACF;IACF,CAAC;IAEDvB,SAAS,CAACa,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}