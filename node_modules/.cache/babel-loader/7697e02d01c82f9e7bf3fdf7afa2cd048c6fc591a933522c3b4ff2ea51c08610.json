{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useQuestionStore } from '@/stores/questions';\nimport Modal from '@/components/Modal.vue';\nexport default {\n  __name: 'AdminDashboard',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const questionStore = useQuestionStore();\n    const questions = ref([]);\n    const showAddModal = ref(false);\n    const currentQuestion = ref({\n      text: '',\n      feedbackYes: '',\n      feedbackNo: ''\n    });\n    const editingQuestion = ref(null);\n    onMounted(async () => {\n      await loadQuestions();\n    });\n    async function loadQuestions() {\n      questions.value = await questionStore.fetchQuestions();\n    }\n    function editQuestion(question) {\n      editingQuestion.value = question._id;\n      currentQuestion.value = {\n        ...question\n      };\n      showAddModal.value = true;\n    }\n    async function saveQuestion() {\n      if (editingQuestion.value) {\n        await questionStore.updateQuestion(editingQuestion.value, currentQuestion.value);\n      } else {\n        await questionStore.addQuestion(currentQuestion.value);\n      }\n      showAddModal.value = false;\n      editingQuestion.value = null;\n      currentQuestion.value = {\n        text: '',\n        feedbackYes: '',\n        feedbackNo: ''\n      };\n      await loadQuestions();\n    }\n    async function deleteQuestion(id) {\n      if (confirm('Ești sigur că vrei să ștergi această întrebare?')) {\n        await questionStore.deleteQuestion(id);\n        await loadQuestions();\n      }\n    }\n    const __returned__ = {\n      questionStore,\n      questions,\n      showAddModal,\n      currentQuestion,\n      editingQuestion,\n      loadQuestions,\n      editQuestion,\n      saveQuestion,\n      deleteQuestion,\n      ref,\n      onMounted,\n      get useQuestionStore() {\n        return useQuestionStore;\n      },\n      Modal\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useQuestionStore","Modal","questionStore","questions","showAddModal","currentQuestion","text","feedbackYes","feedbackNo","editingQuestion","loadQuestions","value","fetchQuestions","editQuestion","question","_id","saveQuestion","updateQuestion","addQuestion","deleteQuestion","id","confirm"],"sources":["D:/Projects/Barmayoun/vue-questions/quizz-app-v2/src/views/AdminDashboard.vue"],"sourcesContent":["<!-- src/views/AdminDashboard.vue -->\r\n<template>\r\n  <div class=\"min-h-screen bg-gray-50 py-8\">\r\n    <div class=\"max-w-7xl mx-auto px-4\">\r\n      <!-- Header -->\r\n      <div class=\"flex justify-between items-center mb-8\">\r\n        <h1 class=\"text-2xl font-bold text-gray-900\">\r\n          Dashboard Administrator\r\n        </h1>\r\n        <button @click=\"showAddModal = true\" class=\"bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-lg\">\r\n          Adaugă Întrebare\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Lista întrebări -->\r\n      <div class=\"bg-white shadow rounded-lg\">\r\n        <div class=\"p-6 space-y-4\">\r\n          <TransitionGroup name=\"list\">\r\n            <div v-for=\"question in questions\" :key=\"question._id\"\r\n              class=\"border rounded-lg p-4 hover:shadow-md transition-all\">\r\n              <div class=\"flex justify-between items-start\">\r\n                <div>\r\n                  <h3 class=\"font-medium\">{{ question.text }}</h3>\r\n                  <div class=\"mt-2 text-sm text-gray-600\">\r\n                    <p>Feedback Da: {{ question.feedbackYes }}</p>\r\n                    <p>Feedback Nu: {{ question.feedbackNo }}</p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"flex space-x-2\">\r\n                  <button @click=\"editQuestion(question)\" class=\"text-blue-600 hover:text-blue-800\">\r\n                    Editează\r\n                  </button>\r\n                  <button @click=\"deleteQuestion(question._id)\" class=\"text-red-600 hover:text-red-800\">\r\n                    Șterge\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </TransitionGroup>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal Adăugare/Editare -->\r\n    <Modal v-if=\"showAddModal\" @close=\"showAddModal = false\">\r\n      <template #header>\r\n        <h3 class=\"text-lg font-medium\">\r\n          {{ editingQuestion ? 'Editează Întrebarea' : 'Adaugă Întrebare Nouă' }}\r\n        </h3>\r\n      </template>\r\n\r\n      <div class=\"space-y-4\">\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-gray-700\">\r\n            Întrebare\r\n          </label>\r\n          <input v-model=\"currentQuestion.text\" type=\"text\"\r\n            class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-gray-700\">\r\n            Feedback pentru Da\r\n          </label>\r\n          <textarea v-model=\"currentQuestion.feedbackYes\"\r\n            class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\"></textarea>\r\n        </div>\r\n\r\n        <div>\r\n          <label class=\"block text-sm font-medium text-gray-700\">\r\n            Feedback pentru Nu\r\n          </label>\r\n          <textarea v-model=\"currentQuestion.feedbackNo\"\r\n            class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm\"></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      <template #footer>\r\n        <button @click=\"saveQuestion\" class=\"bg-primary text-white px-4 py-2 rounded-lg\">\r\n          {{ editingQuestion ? 'Salvează' : 'Adaugă' }}\r\n        </button>\r\n      </template>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useQuestionStore } from '@/stores/questions'\r\nimport Modal from '@/components/Modal.vue'\r\n\r\nconst questionStore = useQuestionStore()\r\nconst questions = ref([])\r\nconst showAddModal = ref(false)\r\nconst currentQuestion = ref({\r\n  text: '',\r\n  feedbackYes: '',\r\n  feedbackNo: ''\r\n})\r\nconst editingQuestion = ref(null)\r\n\r\nonMounted(async () => {\r\n  await loadQuestions()\r\n})\r\n\r\nasync function loadQuestions() {\r\n  questions.value = await questionStore.fetchQuestions()\r\n}\r\n\r\nfunction editQuestion(question) {\r\n  editingQuestion.value = question._id\r\n  currentQuestion.value = { ...question }\r\n  showAddModal.value = true\r\n}\r\n\r\nasync function saveQuestion() {\r\n  if (editingQuestion.value) {\r\n    await questionStore.updateQuestion(editingQuestion.value, currentQuestion.value)\r\n  } else {\r\n    await questionStore.addQuestion(currentQuestion.value)\r\n  }\r\n\r\n  showAddModal.value = false\r\n  editingQuestion.value = null\r\n  currentQuestion.value = { text: '', feedbackYes: '', feedbackNo: '' }\r\n  await loadQuestions()\r\n}\r\n\r\nasync function deleteQuestion(id) {\r\n  if (confirm('Ești sigur că vrei să ștergi această întrebare?')) {\r\n    await questionStore.deleteQuestion(id)\r\n    await loadQuestions()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.list-enter-active,\r\n.list-leave-active {\r\n  transition: all 0.5s ease;\r\n}\r\n\r\n.list-enter-from,\r\n.list-leave-to {\r\n  opacity: 0;\r\n  transform: translateX(30px);\r\n}\r\n</style>"],"mappings":"AAuFA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,OAAOC,KAAK,MAAM,wBAAwB;;;;;;;IAE1C,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,CAAC;IACxC,MAAMG,SAAS,GAAGL,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMM,YAAY,GAAGN,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMO,eAAe,GAAGP,GAAG,CAAC;MAC1BQ,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE;IACd,CAAC,CAAC;IACF,MAAMC,eAAe,GAAGX,GAAG,CAAC,IAAI,CAAC;IAEjCC,SAAS,CAAC,YAAY;MACpB,MAAMW,aAAa,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF,eAAeA,aAAaA,CAAA,EAAG;MAC7BP,SAAS,CAACQ,KAAK,GAAG,MAAMT,aAAa,CAACU,cAAc,CAAC,CAAC;IACxD;IAEA,SAASC,YAAYA,CAACC,QAAQ,EAAE;MAC9BL,eAAe,CAACE,KAAK,GAAGG,QAAQ,CAACC,GAAG;MACpCV,eAAe,CAACM,KAAK,GAAG;QAAE,GAAGG;MAAS,CAAC;MACvCV,YAAY,CAACO,KAAK,GAAG,IAAI;IAC3B;IAEA,eAAeK,YAAYA,CAAA,EAAG;MAC5B,IAAIP,eAAe,CAACE,KAAK,EAAE;QACzB,MAAMT,aAAa,CAACe,cAAc,CAACR,eAAe,CAACE,KAAK,EAAEN,eAAe,CAACM,KAAK,CAAC;MAClF,CAAC,MAAM;QACL,MAAMT,aAAa,CAACgB,WAAW,CAACb,eAAe,CAACM,KAAK,CAAC;MACxD;MAEAP,YAAY,CAACO,KAAK,GAAG,KAAK;MAC1BF,eAAe,CAACE,KAAK,GAAG,IAAI;MAC5BN,eAAe,CAACM,KAAK,GAAG;QAAEL,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAG,CAAC;MACrE,MAAME,aAAa,CAAC,CAAC;IACvB;IAEA,eAAeS,cAAcA,CAACC,EAAE,EAAE;MAChC,IAAIC,OAAO,CAAC,iDAAiD,CAAC,EAAE;QAC9D,MAAMnB,aAAa,CAACiB,cAAc,CAACC,EAAE,CAAC;QACtC,MAAMV,aAAa,CAAC,CAAC;MACvB;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}