{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { jsPDF } from 'jspdf';\nimport axios from 'axios';\nexport default {\n  name: 'QuizComponent',\n  setup() {\n    const questions = [{\n      id: 1,\n      text: \"Ai experiență în dezvoltare web?\",\n      feedbackYes: \"Excelent! Experiența ta în dezvoltare web este un atu important.\",\n      feedbackNo: \"Nu-ți face griji! Toți începem de undeva. Îți recomandăm să începi cu bazele.\"\n    }, {\n      id: 2,\n      text: \"Ai lucrat înainte cu Vue.js?\",\n      feedbackYes: \"Perfect! Cunoștințele tale de Vue.js vor fi foarte utile.\",\n      feedbackNo: \"Vue.js este un framework excelent pentru început. Începe cu documentația oficială.\"\n    }, {\n      id: 3,\n      text: \"Ai experiență cu sisteme de versionare (Git)?\",\n      feedbackYes: \"Foarte bine! Git este esențial în dezvoltarea modernă.\",\n      feedbackNo: \"Git este un instrument fundamental. Începe cu tutorialele de bază.\"\n    }];\n    const currentQuestionIndex = ref(0);\n    const answers = ref({});\n    const userEmail = ref('');\n    const emailError = ref(false);\n    const currentQuestion = computed(() => questions[currentQuestionIndex.value]);\n    const isCompleted = computed(() => currentQuestionIndex.value >= questions.length);\n    const isValidEmail = computed(() => {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return emailRegex.test(userEmail.value);\n    });\n    const generatePDF = () => {\n      const doc = new jsPDF();\n      let yPos = 20;\n\n      // Header\n      doc.setFontSize(20);\n      doc.text('Rezultatele Tale', 105, yPos, {\n        align: 'center'\n      });\n      yPos += 20;\n\n      // Date\n      doc.setFontSize(12);\n      doc.text(`Data: ${new Date().toLocaleDateString()}`, 20, yPos);\n      yPos += 20;\n\n      // Questions and Answers\n      questions.forEach((question, index) => {\n        const answer = answers.value[question.id];\n\n        // Question\n        doc.setFont(undefined, 'bold');\n        doc.text(`${index + 1}. ${question.text}`, 20, yPos);\n        yPos += 10;\n\n        // Answer and Feedback\n        doc.setFont(undefined, 'normal');\n        doc.text(`Răspuns: ${answer ? 'Da' : 'Nu'}`, 20, yPos);\n        yPos += 10;\n\n        // Feedback\n        const feedback = answer ? question.feedbackYes : question.feedbackNo;\n        const feedbackLines = doc.splitTextToSize(feedback, 170);\n        feedbackLines.forEach(line => {\n          doc.text(line, 20, yPos);\n          yPos += 7;\n        });\n        yPos += 10;\n\n        // Add new page if needed\n        if (yPos > 250 && index < questions.length - 1) {\n          doc.addPage();\n          yPos = 20;\n        }\n      });\n      return doc.output('blob');\n    };\n    const answerQuestion = answer => {\n      answers.value[currentQuestion.value.id] = answer;\n      currentQuestionIndex.value++;\n    };\n    const submitResults = async () => {\n      if (!isValidEmail.value) {\n        emailError.value = true;\n        return;\n      }\n      try {\n        const pdfBlob = generatePDF();\n        const formData = new FormData();\n        formData.append('pdf', pdfBlob, 'rezultate.pdf');\n        formData.append('email', userEmail.value);\n        await axios.post('http://localhost:3000/send-results', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert('Rezultatele au fost trimise pe email!');\n      } catch (error) {\n        console.error('Error:', error);\n        alert('A apărut o eroare. Te rugăm să încerci din nou.');\n      }\n    };\n    return {\n      questions,\n      currentQuestion,\n      currentQuestionIndex,\n      isCompleted,\n      userEmail,\n      emailError,\n      isValidEmail,\n      answerQuestion,\n      submitResults\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","jsPDF","axios","name","setup","questions","id","text","feedbackYes","feedbackNo","currentQuestionIndex","answers","userEmail","emailError","currentQuestion","value","isCompleted","length","isValidEmail","emailRegex","test","generatePDF","doc","yPos","setFontSize","align","Date","toLocaleDateString","forEach","question","index","answer","setFont","undefined","feedback","feedbackLines","splitTextToSize","line","addPage","output","answerQuestion","submitResults","pdfBlob","formData","FormData","append","post","headers","alert","error","console"],"sources":["D:\\Projects\\Barmayoun\\vue-questions\\quizz-app-v2\\src\\components\\QuizComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"quiz-container\">\r\n    <!-- Secțiunea întrebări -->\r\n    <div v-if=\"!isCompleted\" class=\"quiz-section\">\r\n      <div class=\"question-card\">\r\n        <h2>{{ currentQuestion.text }}</h2>\r\n        <div class=\"progress-text\">\r\n          Întrebarea {{ currentQuestionIndex + 1 }} din {{ questions.length }}\r\n        </div>\r\n        <div class=\"button-group\">\r\n          <button class=\"btn btn-yes\" @click=\"answerQuestion(true)\">\r\n            Da\r\n          </button>\r\n          <button class=\"btn btn-no\" @click=\"answerQuestion(false)\">\r\n            Nu\r\n          </button>\r\n        </div>\r\n        <div class=\"progress-bar\">\r\n          <div class=\"progress-fill\" :style=\"{ width: `${(currentQuestionIndex / questions.length) * 100}%` }\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Secțiunea email -->\r\n    <div v-else class=\"email-section\">\r\n      <h2>Felicitări! Ai terminat chestionarul</h2>\r\n      <p>Introdu adresa ta de email pentru a primi rezultatele:</p>\r\n      <div class=\"email-form\">\r\n        <input type=\"email\" v-model=\"userEmail\" placeholder=\"your@email.com\" :class=\"{ 'error': emailError }\">\r\n        <button class=\"btn btn-submit\" @click=\"submitResults\" :disabled=\"!isValidEmail\">\r\n          Trimite Rezultatele\r\n        </button>\r\n      </div>\r\n      <p v-if=\"emailError\" class=\"error-text\">\r\n        Te rugăm să introduci o adresă de email validă\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed } from 'vue'\r\nimport { jsPDF } from 'jspdf'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'QuizComponent',\r\n  setup() {\r\n    const questions = [\r\n      {\r\n        id: 1,\r\n        text: \"Ai experiență în dezvoltare web?\",\r\n        feedbackYes: \"Excelent! Experiența ta în dezvoltare web este un atu important.\",\r\n        feedbackNo: \"Nu-ți face griji! Toți începem de undeva. Îți recomandăm să începi cu bazele.\"\r\n      },\r\n      {\r\n        id: 2,\r\n        text: \"Ai lucrat înainte cu Vue.js?\",\r\n        feedbackYes: \"Perfect! Cunoștințele tale de Vue.js vor fi foarte utile.\",\r\n        feedbackNo: \"Vue.js este un framework excelent pentru început. Începe cu documentația oficială.\"\r\n      },\r\n      {\r\n        id: 3,\r\n        text: \"Ai experiență cu sisteme de versionare (Git)?\",\r\n        feedbackYes: \"Foarte bine! Git este esențial în dezvoltarea modernă.\",\r\n        feedbackNo: \"Git este un instrument fundamental. Începe cu tutorialele de bază.\"\r\n      }\r\n    ]\r\n\r\n    const currentQuestionIndex = ref(0)\r\n    const answers = ref({})\r\n    const userEmail = ref('')\r\n    const emailError = ref(false)\r\n\r\n    const currentQuestion = computed(() =>\r\n      questions[currentQuestionIndex.value]\r\n    )\r\n\r\n    const isCompleted = computed(() =>\r\n      currentQuestionIndex.value >= questions.length\r\n    )\r\n\r\n    const isValidEmail = computed(() => {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n      return emailRegex.test(userEmail.value)\r\n    })\r\n\r\n    const generatePDF = () => {\r\n      const doc = new jsPDF()\r\n      let yPos = 20\r\n\r\n      // Header\r\n      doc.setFontSize(20)\r\n      doc.text('Rezultatele Tale', 105, yPos, { align: 'center' })\r\n      yPos += 20\r\n\r\n      // Date\r\n      doc.setFontSize(12)\r\n      doc.text(`Data: ${new Date().toLocaleDateString()}`, 20, yPos)\r\n      yPos += 20\r\n\r\n      // Questions and Answers\r\n      questions.forEach((question, index) => {\r\n        const answer = answers.value[question.id]\r\n\r\n        // Question\r\n        doc.setFont(undefined, 'bold')\r\n        doc.text(`${index + 1}. ${question.text}`, 20, yPos)\r\n        yPos += 10\r\n\r\n        // Answer and Feedback\r\n        doc.setFont(undefined, 'normal')\r\n        doc.text(\r\n          `Răspuns: ${answer ? 'Da' : 'Nu'}`,\r\n          20,\r\n          yPos\r\n        )\r\n        yPos += 10\r\n\r\n        // Feedback\r\n        const feedback = answer ? question.feedbackYes : question.feedbackNo\r\n        const feedbackLines = doc.splitTextToSize(feedback, 170)\r\n        feedbackLines.forEach(line => {\r\n          doc.text(line, 20, yPos)\r\n          yPos += 7\r\n        })\r\n\r\n        yPos += 10\r\n\r\n        // Add new page if needed\r\n        if (yPos > 250 && index < questions.length - 1) {\r\n          doc.addPage()\r\n          yPos = 20\r\n        }\r\n      })\r\n\r\n      return doc.output('blob')\r\n    }\r\n\r\n    const answerQuestion = (answer) => {\r\n      answers.value[currentQuestion.value.id] = answer\r\n      currentQuestionIndex.value++\r\n    }\r\n\r\n    const submitResults = async () => {\r\n      if (!isValidEmail.value) {\r\n        emailError.value = true\r\n        return\r\n      }\r\n\r\n      try {\r\n        const pdfBlob = generatePDF()\r\n        const formData = new FormData()\r\n        formData.append('pdf', pdfBlob, 'rezultate.pdf')\r\n        formData.append('email', userEmail.value)\r\n\r\n        await axios.post('http://localhost:3000/send-results', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        })\r\n\r\n        alert('Rezultatele au fost trimise pe email!')\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n        alert('A apărut o eroare. Te rugăm să încerci din nou.')\r\n      }\r\n    }\r\n\r\n    return {\r\n      questions,\r\n      currentQuestion,\r\n      currentQuestionIndex,\r\n      isCompleted,\r\n      userEmail,\r\n      emailError,\r\n      isValidEmail,\r\n      answerQuestion,\r\n      submitResults\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.quiz-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.question-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  padding: 2rem;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 2rem;\r\n\r\n  h2 {\r\n    margin-bottom: 1.5rem;\r\n    color: #2c3e50;\r\n  }\r\n}\r\n\r\n.progress-text {\r\n  text-align: center;\r\n  color: #666;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.btn {\r\n  padding: 0.8rem 2rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  &:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n  }\r\n}\r\n\r\n.btn-yes {\r\n  background: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.btn-no {\r\n  background: #f44336;\r\n  color: white;\r\n}\r\n\r\n.btn-submit {\r\n  background: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.progress-bar {\r\n  width: 100%;\r\n  height: 8px;\r\n  background: #eee;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n}\r\n\r\n.progress-fill {\r\n  height: 100%;\r\n  background: #2196F3;\r\n  transition: width 0.3s ease;\r\n}\r\n\r\n.email-section {\r\n  text-align: center;\r\n\r\n  h2 {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  p {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n}\r\n\r\n.email-form {\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-bottom: 1rem;\r\n\r\n  input {\r\n    flex: 1;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    font-size: 1rem;\r\n\r\n    &.error {\r\n      border-color: #f44336;\r\n    }\r\n  }\r\n}\r\n\r\n.error-text {\r\n  color: #f44336;\r\n  font-size: 0.9rem;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}